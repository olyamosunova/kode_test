{"version":3,"sources":["const.js","components/FormLogin/FormLogin.js","components/FormSmsCode/FormSmsCode.js","components/Authorization/Authorization.js","components/Loader/Loader.js","components/Select/Select.js","components/CardItem/CardItem.js","components/Cards/Cards.js","components/Header/Header.js","components/Main/Main.js","components/CardDetail/CardDetail.js","components/App/App.js","index.js"],"names":["AuthorizationStatus","ERROR_MESSAGES","FORM_NAME","FormLogin","isAuthorizationSuccess","submitForm","handleChange","errors","className","onSubmit","name","type","placeholder","onChange","FormSmsCode","Authorization","onLoginFormSubmit","onCodeFormSubmit","serverError","useState","setIsAuthorizationSuccess","showCodeForm","setShowCodeForm","fields","state","setState","useEffect","handleValidation","formName","formIsValid","login","password","code","codeSubmit","evt","a","preventDefault","target","value","alert","Loader","CircularProgress","color","Select","title","items","onSelect","selectOpened","setSelectOpened","selectValue","setSelectValue","filteredItems","setFilteredItems","searchInputEl","useRef","selectEl","document","addEventListener","current","contains","ref","cx","onClick","onInput","toLowerCase","newItems","filter","item","indexOf","handlerSearch","map","CardItem","card","src","images","small","alt","artist","to","id","Cards","cards","setCards","pokemonTypes","setPokemonTypes","pokemonSubtypes","setPokemonSubtypes","isLoaded","setIsLoaded","chosenType","setChosenType","chosenSubtype","setChosenSubtype","filteredCards","setFilteredCards","pageCount","setPageCount","activePage","setActivePage","axios","get","then","response","data","catch","error","console","params","pageSize","Math","round","totalCount","finally","query","q","page","length","Pagination","count","showFirstButton","showLastButton","Header","isBackLink","history","useHistory","goBack","Main","CardDetail","cardId","useParams","setData","large","supertype","types","join","subtypes","attacks","flavorText","App","localStorage","getItem","authorizationStatus","setAuthorizationStatus","setServerError","loginHandler","checkCode","OTR","Promise","resolve","reject","setTimeout","err","smsCodeHandler","setItem","Auth","exact","path","render","removeItem","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5bbf3010.chunk.js","sourcesContent":["export const AuthorizationStatus = {\r\n    NO_AUTH: `NO_AUTH`,\r\n    AUTH: `AUTH`,\r\n};\r\n\r\nexport const ERROR_MESSAGES = {\r\n    empty_field: 'Поле должно быть заполнено.',\r\n    incorrect_authorization: 'Неверный логин или пароль.',\r\n    incorrect_sms_code: 'Неверный код'\r\n};\r\n\r\nexport const FORM_NAME = {\r\n    LOGIN: 'LOGIN',\r\n    CODE: 'CODE'\r\n};\r\n","import React from 'react';\r\nimport { ERROR_MESSAGES } from '../../const';\r\n\r\nconst FormLogin = ({ isAuthorizationSuccess, submitForm, handleChange, errors }) => {\r\n    return (\r\n        <form className=\"form\" onSubmit={ submitForm }>\r\n            { !isAuthorizationSuccess && <p className=\"form__error\">{ ERROR_MESSAGES.incorrect_authorization }</p> }\r\n\r\n            <div className=\"form__block\">\r\n                <label className={ errors[\"login\"] && \"is-invalid\" }>\r\n                    <span>Login</span>\r\n                    <input\r\n                        name=\"login\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter login\"\r\n                        onChange={ handleChange }\r\n                    />\r\n                </label>\r\n                { errors[\"login\"] && <div className=\"form__block-error\">{ errors[\"login\"] }</div> }\r\n            </div>\r\n\r\n            <div className=\"form__block\">\r\n                <label className={ errors[\"password\"] && \"is-invalid\" }>\r\n                    <span>Login</span>\r\n                    <input\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Enter password\"\r\n                        onChange={ handleChange }\r\n                    />\r\n                </label>\r\n\r\n                { errors[\"password\"] && <div className=\"form__block-error\">{ errors[\"password\"] }</div> }\r\n            </div>\r\n\r\n            <button className=\"button\" type=\"submit\">Log in</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default FormLogin;\r\n","import React from 'react';\r\n\r\nconst FormSmsCode = ({ handleChange, submitForm, errors }) => {\r\n    return (\r\n        <form className=\"form\" onSubmit={ submitForm }>\r\n            <div className=\"form__block\">\r\n                <label className={ errors[\"code\"] && \"is-invalid\" }>\r\n                    <span>Code from SMS</span>\r\n                    <input\r\n                        name=\"code\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter code\"\r\n                        onChange={ handleChange }\r\n                    />\r\n                </label>\r\n                { errors[\"code\"] && <div className=\"form__block-error\">{ errors[\"code\"] }</div> }\r\n            </div>\r\n\r\n            <button className=\"button\" type=\"submit\">Send</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default FormSmsCode;\r\n","import React, {useEffect, useState} from 'react';\r\nimport FormLogin from '../FormLogin/FormLogin';\r\nimport './Authorization.css';\r\nimport FormSmsCode from '../FormSmsCode/FormSmsCode';\r\nimport { ERROR_MESSAGES, FORM_NAME } from '../../const';\r\n\r\nconst Authorization = ({ onLoginFormSubmit, onCodeFormSubmit, serverError }) => {\r\n    const [isAuthorizationSuccess, setIsAuthorizationSuccess] = useState(true);\r\n    const [showCodeForm, setShowCodeForm] = useState(false);\r\n\r\n    const [state, setState] = useState({\r\n        fields: {},\r\n        errors: {}\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (serverError) {\r\n            setState({\r\n                ...state,\r\n                errors: {}\r\n            })\r\n        }\r\n    }, [serverError]);\r\n\r\n    const handleValidation = (formName) => {\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        switch (formName) {\r\n            case FORM_NAME.LOGIN:\r\n                if (!state.fields.login) {\r\n                    formIsValid = false;\r\n                    errors['login'] = ERROR_MESSAGES.empty_field;\r\n                }\r\n\r\n                if (!state.fields.password) {\r\n                    formIsValid = false;\r\n                    errors['password'] = ERROR_MESSAGES.empty_field;\r\n                }\r\n\r\n                break;\r\n\r\n            case FORM_NAME.CODE:\r\n                if (!state.fields.code) {\r\n                    formIsValid = false;\r\n                    errors['code'] = ERROR_MESSAGES.empty_field;\r\n                }\r\n\r\n                break;\r\n        }\r\n\r\n        setState({ ...state, errors: errors });\r\n        return formIsValid;\r\n    };\r\n\r\n    const loginSubmit = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        if (handleValidation(FORM_NAME.LOGIN)) {\r\n            if (onLoginFormSubmit(state.fields)) {\r\n                setShowCodeForm(true);\r\n                alert('Valid SMS code: 123456');\r\n            } else {\r\n                setIsAuthorizationSuccess(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const codeSubmit = async (evt) => {\r\n        evt.preventDefault();\r\n\r\n        if(handleValidation(FORM_NAME.CODE)) {\r\n            const isValidCode = await onCodeFormSubmit(state.fields.login, state.fields.code);\r\n\r\n            if (!isValidCode) {\r\n                setState({ ...state, errors: {\r\n                        code: ERROR_MESSAGES.incorrect_sms_code\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleChange = (evt) => {\r\n        let fields = state.fields;\r\n        fields[evt.target.name] = evt.target.value;\r\n        setState({ fields, errors: {\r\n                ...state.errors,\r\n                [evt.target.name]: null\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"auth\">\r\n            <div className=\"container\">\r\n                { serverError && <p className=\"text-danger\">Ошибка сервера: {serverError}</p> }\r\n\r\n                { showCodeForm\r\n                    ? <FormSmsCode handleChange={ handleChange } submitForm={ codeSubmit } errors={ state.errors } />\r\n                    : <FormLogin isAuthorizationSuccess={ isAuthorizationSuccess } handleChange={ handleChange } submitForm={ loginSubmit } errors={ state.errors } />\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Authorization;\r\n","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport './Loader.css';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <CircularProgress color=\"primary\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport './Select.css';\r\nimport cx from 'classnames';\r\n\r\nconst Select = ({title = 'Type', items = [], onSelect}) => {\r\n    const [selectOpened, setSelectOpened] = useState(false);\r\n    const [selectValue, setSelectValue] = useState('');\r\n    const [filteredItems, setFilteredItems] = useState(items);\r\n    const searchInputEl = useRef();\r\n    const selectEl = useRef();\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (evt) => {\r\n            if(selectEl.current && !selectEl.current.contains(evt.target)) {\r\n                setSelectOpened(false);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('click', handleClickOutside);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFilteredItems(items);\r\n        searchInputEl.current.value = '';\r\n    }, [selectOpened]);\r\n\r\n    const handlerOpenSelect = () => {\r\n        setSelectOpened(!selectOpened);\r\n    };\r\n\r\n    const handlerChooseItem = (value) => {\r\n        if(selectValue === value) {\r\n            setSelectValue('');\r\n        } else {\r\n            setSelectValue(value);\r\n        }\r\n\r\n        setSelectOpened(false);\r\n        onSelect(selectValue === value ? '' : value);\r\n    };\r\n\r\n    const handlerSearch = (evt) => {\r\n        const value = evt.target.value.toLowerCase();\r\n        const newItems = items.filter(item => item.toLowerCase().indexOf(value) > -1);\r\n\r\n        if (value !== '') {\r\n            setFilteredItems(newItems);\r\n        } else {\r\n            setFilteredItems(items);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div ref={selectEl} className={cx('select my-5', {'select--open': selectOpened})}>\r\n            <div className=\"select__header\" onClick={handlerOpenSelect}>\r\n                <span>{ selectValue ? selectValue : title }</span>\r\n\r\n            </div>\r\n            <div className=\"select__body\">\r\n                <div className=\"select__search\">\r\n                    <input ref={searchInputEl} onInput={(evt) => handlerSearch(evt)} placeholder=\"Type something...\" />\r\n                </div>\r\n                <div className=\"select__list\">\r\n                    { filteredItems.map(item => (\r\n                        <a\r\n                            key={item}\r\n                            className={cx('select__item', {'select__item--active': item === selectValue})}\r\n                            onClick={() => handlerChooseItem(item)}\r\n                        >{ item }</a>\r\n                    )) }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Select;\r\n","import React from 'react';\r\nimport './CardItem.css';\r\nimport cx from 'classnames';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst CardItem = ({ className, card }) => {\r\n    return (\r\n        <div className={cx(className, {'card-item': true})}>\r\n            <div className=\"card-item__image\">\r\n                <img src={card.images?.small} alt={card.name} />\r\n            </div>\r\n\r\n            <div className=\"card-item__info\">\r\n                <p>{card.name}</p>\r\n                <p> {card.artist}</p>\r\n            </div>\r\n\r\n            <div className=\"card-item__controls\">\r\n                <Link to={`/cards/${card.id}`} className=\"card-item__button\">\r\n                    Go to detail page\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardItem;\r\n","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport Loader from '../Loader/Loader';\r\nimport Select from '../Select/Select';\r\nimport './Cards.css';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport CardItem from '../CardItem/CardItem';\r\n\r\nconst Cards = () => {\r\n    const [cards, setCards] = useState([]);\r\n    const [pokemonTypes, setPokemonTypes] = useState([]);\r\n    const [pokemonSubtypes, setPokemonSubtypes] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [chosenType, setChosenType] = useState('');\r\n    const [chosenSubtype, setChosenSubtype] = useState('');\r\n    const [filteredCards, setFilteredCards] = useState(cards);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    const [activePage, setActivePage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        axios.get('https://api.pokemontcg.io/v2/types')\r\n            .then(response => {\r\n                setPokemonTypes(response.data.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n\r\n        axios.get('https://api.pokemontcg.io/v2/subtypes')\r\n            .then(response => {\r\n                setPokemonSubtypes(response.data.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n\r\n        axios.get('https://api.pokemontcg.io/v2/cards', {\r\n            params: {\r\n                pageSize: 4\r\n            }})\r\n            .then(response => {\r\n                setCards(response.data.data);\r\n                setFilteredCards(response.data.data);\r\n                setPageCount(Math.round(response.data.totalCount / response.data.pageSize));\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            })\r\n            .finally(() => setIsLoaded(true));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let query = chosenType && chosenSubtype\r\n            ? `types:${chosenType} subtypes:${chosenSubtype}`\r\n            : chosenType ? `types:${chosenType}` :  chosenSubtype && `subtypes:${chosenSubtype}`;\r\n\r\n        axios.get('https://api.pokemontcg.io/v2/cards', {\r\n            params: {\r\n                pageSize: 4,\r\n                q: query\r\n            }})\r\n            .then(response => {\r\n                setFilteredCards(response.data.data);\r\n                setPageCount(Math.round(response.data.totalCount / response.data.pageSize));\r\n                setActivePage(1);\r\n            })\r\n            .catch(() => {\r\n                setFilteredCards([]);\r\n                setPageCount(0);\r\n                setActivePage(1);\r\n            });\r\n\r\n    }, [chosenType, chosenSubtype]);\r\n\r\n    useEffect(() => {\r\n        let query = chosenType && chosenSubtype\r\n            ? `types:${chosenType} subtypes:${chosenSubtype}`\r\n            : chosenType ? `types:${chosenType}` :  chosenSubtype && `subtypes:${chosenSubtype}`;\r\n\r\n        axios.get('https://api.pokemontcg.io/v2/cards', {\r\n            params: {\r\n                pageSize: 4,\r\n                page: activePage,\r\n                q: query\r\n            }})\r\n            .then(response => {\r\n                setCards(response.data.data);\r\n                setFilteredCards(response.data.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }, [activePage]);\r\n\r\n    const handlerSelectType = (value) => {\r\n        setChosenType(value);\r\n    };\r\n\r\n    const handlerSelectSubtype = (value) => {\r\n        setChosenSubtype(value)\r\n    };\r\n\r\n    const handlerPageClick = (evt, page) => {\r\n        evt.preventDefault();\r\n        setActivePage(page);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!isLoaded\r\n                ?\r\n                <Loader />\r\n                :\r\n                <div className=\"cards\">\r\n                    <div className=\"cards__filter\">\r\n                        { pokemonTypes.length && (\r\n                            <Select title=\"Type\" items={ pokemonTypes } onSelect={ handlerSelectType } />\r\n                        )}\r\n\r\n                        { pokemonSubtypes.length && (\r\n                            <Select title=\"Subtype\" items={ pokemonSubtypes } onSelect={ handlerSelectSubtype } />\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"cards__wrapper\">\r\n                        <div className=\"cards__list\">\r\n                            { filteredCards.map(card => (\r\n                                <CardItem className=\"cards__item\" key={card.id} card={card} />\r\n                            ))}\r\n\r\n                            { !filteredCards.length && <p>Pokemons not found by this filter</p> }\r\n                        </div>\r\n\r\n                        { pageCount > 1 && (\r\n                            <Pagination page={activePage} onChange={handlerPageClick} count={ pageCount } showFirstButton showLastButton />\r\n                        ) }\r\n                    </div>\r\n                </div>\r\n            }\r\n            </>\r\n    );\r\n};\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './Header.css';\r\n\r\nconst Header = ({ isBackLink = false }) => {\r\n    let history = useHistory();\r\n\r\n    const handlerClickBack = () => {\r\n        history.goBack();\r\n    };\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"container\">\r\n                <div className=\"header__nav\">\r\n                    { isBackLink && <button type=\"button\" onClick={ handlerClickBack }>&lt; Back</button> }\r\n\r\n                    <Link className=\"ml-auto\" to=\"/logout\">Logout</Link>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Main.css';\r\nimport Cards from '../Cards/Cards';\r\nimport Header from '../Header/Header';\r\n\r\nconst Main = () => {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <main>\r\n                <div className=\"container\">\r\n                    <Cards />\r\n                </div>\r\n            </main>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React, {useEffect, useState} from 'react';\r\nimport Header from '../Header/Header';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport './CardDetail.css';\r\nimport Loader from '../Loader/Loader';\r\n\r\nconst CardDetail = () => {\r\n    let { cardId } = useParams();\r\n    const [data, setData] = useState({});\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://api.pokemontcg.io/v2/cards/${cardId}`)\r\n            .then(response => {\r\n                setData(response.data.data);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Header isBackLink={ true } />\r\n\r\n            <>\r\n                { !isLoaded\r\n                    ?\r\n                    <Loader />\r\n                    :\r\n                    <main>\r\n                        <div className=\"container\">\r\n                            <div className=\"card-detail\">\r\n                                <p className=\"card-detail__title\">{data.name}</p>\r\n\r\n                                <div className=\"card-detail__block\">\r\n                                    <div className=\"card-detail__image\">\r\n                                        <img src={data.images?.large} alt={data.name} />\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"card-detail__block\">\r\n                                    <div className=\"card-detail__info\">\r\n                                        <p>Pokemon name: <b>{data.name}</b></p>\r\n                                        <p>Supertype: <b>{data.supertype}</b></p>\r\n                                        <p>Types: <b>{data.types.join(', ')}</b></p>\r\n                                        <p>Subtypes: <b>{data.subtypes.join(', ')}</b></p>\r\n                                    </div>\r\n\r\n                                    <div className=\"card-detail__info\">\r\n                                        <ul>\r\n                                            { data.attacks.map(item => <li key={item.name}><b>{item.name}</b></li>) }\r\n                                        </ul>\r\n                                    </div>\r\n\r\n                                    <p className=\"card-detail__description\">{data.flavorText}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                }\r\n            </>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CardDetail;\r\n","import React, {useState} from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\nimport './App.css';\nimport Authorization from '../Authorization/Authorization';\nimport { AuthorizationStatus } from '../../const';\nimport Main from '../Main/Main';\nimport CardDetail from '../CardDetail/CardDetail';\n\nconst App = () => {\n    const [authorizationStatus, setAuthorizationStatus] = useState(\n        localStorage.getItem('pokemonAuthorization') ? AuthorizationStatus.AUTH : AuthorizationStatus.NO_AUTH\n    );\n\n    const [serverError, setServerError] = useState(null);\n\n    const loginHandler = ({ login, password }) => {\n        return login === 'kode@kode.ru' && password === 'Enk0deng';\n    };\n\n    const checkCode = async () => {\n        let code = null;\n\n        let OTR = new Promise((resolve, reject) => {\n            setTimeout(() => {\n                resolve({ data: '123456' });\n                // reject(\"Server error\");\n            }, 250);\n        });\n\n        await OTR.then(response => {\n            code = response.data;\n            setServerError(null);\n        })\n            .catch(err => {\n                console.error(err);\n                setServerError(err);\n            });\n\n        return code;\n    };\n\n    const smsCodeHandler = async (login, code) => {\n        let getCode = await checkCode(code);\n\n        if (getCode === code) {\n            localStorage.setItem('pokemonAuthorization', login);\n            setAuthorizationStatus(AuthorizationStatus.AUTH);\n            return true;\n        }\n\n        return false;\n    };\n\n    const Auth = () => {\n        return <Authorization onLoginFormSubmit={ loginHandler } onCodeFormSubmit={ smsCodeHandler } serverError={ serverError } />\n    };\n\n    const renderLogoutPage = () => {\n        localStorage.removeItem('pokemonAuthorization');\n        setAuthorizationStatus(AuthorizationStatus.NO_AUTH);\n\n        return <Redirect to='/' />;\n    };\n\n    return (\n        <div className=\"app\">\n            <Router>\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/\"\n                        render={() => {\n                            return authorizationStatus !== AuthorizationStatus.AUTH\n                                ? <Redirect to=\"/login\" />\n                                : <Redirect to=\"/cards\" />;\n                        }}\n                    />\n                    <Route\n                        exact\n                        path='/login'\n                        render={() => {\n                            return authorizationStatus !== AuthorizationStatus.AUTH\n                                ? <Auth />\n                                : <Redirect to='/cards' />;\n                        }}\n                    />\n                    <Route\n                        exact\n                        path='/logout'\n                        render={ renderLogoutPage }\n                    />\n                    <Route\n                        exact\n                        path='/cards'\n                        render={() => {\n                            return authorizationStatus !== AuthorizationStatus.AUTH\n                                ? <Redirect to='/login' />\n                                : <Main />;\n                        }}\n                    />\n                    <Route\n                        exact\n                        path='/cards/:cardId'\n                        render={() => {\n                            return authorizationStatus !== AuthorizationStatus.AUTH\n                                ? <Redirect to='/login' />\n                                : <CardDetail />;\n                        }}\n                    />\n                </Switch>\n            </Router>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}