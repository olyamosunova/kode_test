{"version":3,"sources":["const.js","components/FormLogin/FormLogin.js","components/FormSmsCode/FormSmsCode.js","components/Authorization/Authorization.js","components/Header/Header.js","components/Loader/Loader.js","components/ErrorBlock/cry.gif","components/ErrorBlock/ErrorBlock.js","components/CardDetail/CardDetail.js","components/Select/Select.js","components/CardItem/CardItem.js","components/ModalCard/ModalCard.js","utils.js","components/Cards/Cards.js","components/NotFoundPage/pokeball.png","components/NotFoundPage/NotFoundPage.js","components/App/App.js","index.js"],"names":["ERROR_MESSAGES","FORM_NAME","POKEMON_API_KEY","FormLogin","isAuthorizationSuccess","submitForm","handlerChange","errors","useState","formError","setFormError","useEffect","className","cx","onSubmit","evt","name","type","placeholder","onChange","FormSmsCode","Authorization","handlerLoginFormSubmit","handlerCodeFormSubmit","serverError","setIsAuthorizationSuccess","showCodeForm","setShowCodeForm","fields","state","setState","validateForm","formName","formIsValid","login","password","code","submitCode","a","preventDefault","target","value","alert","Header","clickLogout","isBackLink","history","useHistory","onClick","goBack","localStorage","removeItem","push","Loader","xmlns","width","height","viewBox","transform","x","y","rx","ry","fill","attributeName","values","keyTimes","dur","begin","repeatCount","ErrorBlock","message","backUrl","handlerClickBack","src","gif","alt","to","CardDetail","handlerClickLogout","cardId","useParams","data","setData","isLoaded","setIsLoaded","setServerError","pokemon","configure","apiKey","card","find","then","catch","finally","images","large","supertype","types","join","subtypes","attacks","length","map","item","flavorText","Select","title","items","onSelect","activeItem","selectOpened","setSelectOpened","selectValue","setSelectValue","filteredItems","setFilteredItems","searchInputEl","useRef","selectEl","document","addEventListener","current","contains","ref","onInput","toLowerCase","newItems","filter","indexOf","handlerClickSearch","CardItem","handlerClickCard","tabIndex","small","artist","stopPropagation","id","ModalCard","handlerCloseModal","ModalWrapper","modalShow","setModalShow","getQueryForCards","subtype","setSearchParams","currentType","currentSubtype","currentPage","page","Cards","query","URLSearchParams","location","search","cards","setCards","pokemonTypes","setPokemonTypes","pokemonSubtypes","setPokemonSubtypes","get","chosenType","setChosenType","chosenSubtype","setChosenSubtype","pageCount","setPageCount","activePage","setActivePage","activeModal","setActiveModal","all","where","pageSize","q","response","Math","round","totalCount","Pagination","count","showFirstButton","showLastButton","NotFoundPage","img","App","isAuthorizedLocal","getItem","isAuthorized","setIsAuthorized","checkCode","OTR","Promise","resolve","reject","setTimeout","err","console","error","setItem","exact","path","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.11bbf987.chunk.js","sourcesContent":["export const ERROR_MESSAGES = {\r\n    empty_field: 'Required field.',\r\n    incorrect_authorization: 'Incorrect login or password.',\r\n    incorrect_sms_code: 'Invalid code'\r\n};\r\n\r\nexport const FORM_NAME = {\r\n    LOGIN: 'LOGIN',\r\n    CODE: 'CODE'\r\n};\r\n\r\nexport const POKEMON_API_KEY = '1cf24b30-3606-41ab-9abd-fc96dbcd39bf';\r\n","import React, {useEffect, useState} from 'react';\r\nimport { ERROR_MESSAGES } from '../../const';\r\nimport cx from 'classnames';\r\n\r\nconst FormLogin = ({ isAuthorizationSuccess, submitForm, handlerChange, errors }) => {\r\n    const [formError, setFormError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (errors['login'] || errors['password'] || !isAuthorizationSuccess) {\r\n            setFormError(true);\r\n        }\r\n    }, [errors]);\r\n\r\n    const handlerSubmitForm = (evt) => {\r\n        setFormError(false);\r\n        submitForm(evt);\r\n    };\r\n\r\n    return (\r\n        <form\r\n            className={ cx('form', { 'form--error': formError }) }\r\n            onSubmit={ handlerSubmitForm }\r\n        >\r\n            { !isAuthorizationSuccess && <p className='form__error'>{ ERROR_MESSAGES.incorrect_authorization }</p> }\r\n\r\n            <div className='form__block'>\r\n                <label className={ errors['login'] && 'is-invalid' }>\r\n                    <span>Login</span>\r\n                    <input\r\n                        name='login'\r\n                        type='text'\r\n                        placeholder='Enter login'\r\n                        onChange={ handlerChange }\r\n                    />\r\n                </label>\r\n                { errors['login'] && <div className='form__block-error'>{ errors['login'] }</div> }\r\n            </div>\r\n\r\n            <div className='form__block'>\r\n                <label className={ errors['password'] && 'is-invalid' }>\r\n                    <span>Password</span>\r\n                    <input\r\n                        name='password'\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        onChange={ handlerChange }\r\n                    />\r\n                </label>\r\n\r\n                { errors['password'] && <div className='form__block-error'>{ errors['password'] }</div> }\r\n            </div>\r\n\r\n            <button className='button' type='submit'>Log in</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default FormLogin;\r\n","import React, {useEffect, useState} from 'react';\r\nimport cx from 'classnames';\r\n\r\nconst FormSmsCode = ({ handlerChange, submitForm, errors }) => {\r\n    const [formError, setFormError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (errors['code']) {\r\n            setFormError(true);\r\n        }\r\n    }, [errors]);\r\n\r\n    const handlerSubmitForm = (evt) => {\r\n        setFormError(false);\r\n        submitForm(evt);\r\n    };\r\n\r\n    return (\r\n        <form\r\n            className={ cx('form', { 'form--error': formError }) }\r\n            onSubmit={ handlerSubmitForm }\r\n        >\r\n            <div className='form__block'>\r\n                <label className={ errors['code'] && 'is-invalid' }>\r\n                    <span>Code from SMS</span>\r\n                    <input\r\n                        name='code'\r\n                        type='text'\r\n                        placeholder='Enter code'\r\n                        onChange={ handlerChange }\r\n                    />\r\n                </label>\r\n                { errors['code'] && <div className='form__block-error'>{ errors['code'] }</div> }\r\n            </div>\r\n\r\n            <button className='button' type='submit'>Send</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default FormSmsCode;\r\n","import React, {useEffect, useState} from 'react';\r\nimport FormLogin from '../FormLogin/FormLogin';\r\nimport FormSmsCode from '../FormSmsCode/FormSmsCode';\r\nimport { ERROR_MESSAGES, FORM_NAME } from '../../const';\r\nimport './Authorization.css';\r\n\r\nconst Authorization = ({ handlerLoginFormSubmit, handlerCodeFormSubmit, serverError }) => {\r\n    const [isAuthorizationSuccess, setIsAuthorizationSuccess] = useState(true);\r\n    const [showCodeForm, setShowCodeForm] = useState(false);\r\n    const [state, setState] = useState({\r\n        fields: {},\r\n        errors: {}\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (serverError) {\r\n            setState({\r\n                ...state,\r\n                errors: {}\r\n            })\r\n        }\r\n    }, [serverError]);\r\n\r\n    const validateForm = (formName) => {\r\n        const errors = {};\r\n        let formIsValid = true;\r\n\r\n        switch (formName) {\r\n            case FORM_NAME.LOGIN:\r\n                if (!state.fields.login) {\r\n                    formIsValid = false;\r\n                    errors['login'] = ERROR_MESSAGES.empty_field;\r\n                }\r\n\r\n                if (!state.fields.password) {\r\n                    formIsValid = false;\r\n                    errors['password'] = ERROR_MESSAGES.empty_field;\r\n                }\r\n\r\n                break;\r\n\r\n            case FORM_NAME.CODE:\r\n                if (!state.fields.code) {\r\n                    formIsValid = false;\r\n                    errors['code'] = ERROR_MESSAGES.empty_field;\r\n                }\r\n\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        setState({\r\n            ...state,\r\n            errors: errors\r\n        });\r\n        return formIsValid;\r\n    };\r\n\r\n    const submitLogin = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        if (validateForm(FORM_NAME.LOGIN)) {\r\n            if (handlerLoginFormSubmit(state.fields)) {\r\n                setShowCodeForm(true);\r\n                alert('Valid SMS code: 123456');\r\n            } else {\r\n                setIsAuthorizationSuccess(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const submitCode = async (evt) => {\r\n        evt.preventDefault();\r\n\r\n        if(validateForm(FORM_NAME.CODE)) {\r\n            const isValidCode = await handlerCodeFormSubmit(state.fields.login, state.fields.code);\r\n\r\n            if (!isValidCode) {\r\n                setState({\r\n                    ...state,\r\n                    errors: {\r\n                        code: ERROR_MESSAGES.incorrect_sms_code\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    const handlerChange = (evt) => {\r\n        const fields = state.fields;\r\n        fields[evt.target.name] = evt.target.value;\r\n        setState({\r\n            fields,\r\n            errors: {\r\n                ...state.errors,\r\n                [evt.target.name]: null\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className='auth'>\r\n            <div className='container'>\r\n                { serverError && <p className='server-errors'>Server Error: { serverError }</p> }\r\n\r\n                { showCodeForm\r\n                    ? <FormSmsCode handlerChange={ handlerChange } submitForm={ submitCode } errors={ state.errors } />\r\n                    : <FormLogin\r\n                        isAuthorizationSuccess={ isAuthorizationSuccess }\r\n                        handlerChange={ handlerChange }\r\n                        submitForm={ submitLogin }\r\n                        errors={ state.errors }\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Authorization;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = ({ clickLogout, isBackLink = false }) => {\r\n    const history = useHistory();\r\n\r\n    const handlerClickBack = () => {\r\n        history.goBack();\r\n    };\r\n\r\n    const handlerClickLogout = () => {\r\n        localStorage.removeItem('pokemonAuthorization');\r\n        clickLogout();\r\n\r\n        history.push('/login');\r\n    };\r\n\r\n    return (\r\n        <header className='header'>\r\n            <div className='container'>\r\n                <div className='header__nav'>\r\n                    { isBackLink && <button type='button' onClick={ handlerClickBack }>&lt; Back</button> }\r\n\r\n                    <button className='ml-auto' onClick={ handlerClickLogout }>Logout</button>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className='loader'>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100px\" height=\"100px\" viewBox=\"0 0 100 100\">\r\n                <g transform=\"rotate(0 50 50)\">\r\n                    <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#456caa\">\r\n                        <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.9166666666666666s\" repeatCount=\"indefinite\"></animate>\r\n                    </rect>\r\n                </g>\r\n                <g transform=\"rotate(30 50 50)\">\r\n                    <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#456caa\">\r\n                        <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.8333333333333334s\" repeatCount=\"indefinite\"></animate>\r\n                    </rect>\r\n                </g>\r\n                <g transform=\"rotate(60 50 50)\">\r\n                    <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#456caa\">\r\n                        <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.75s\" repeatCount=\"indefinite\"></animate>\r\n                    </rect>\r\n                </g>\r\n                <g transform=\"rotate(90 50 50)\">\r\n                    <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#456caa\">\r\n                        <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.6666666666666666s\" repeatCount=\"indefinite\"></animate>\r\n                    </rect>\r\n                </g>\r\n                <g transform=\"rotate(120 50 50)\">\r\n                    <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#456caa\">\r\n                        <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.5833333333333334s\" repeatCount=\"indefinite\"></animate>\r\n                    </rect>\r\n                </g>\r\n                <g transform=\"rotate(150 50 50)\">\r\n                    <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#456caa\">\r\n                        <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.5s\" repeatCount=\"indefinite\"></animate>\r\n                    </rect>\r\n                </g>\r\n                <g transform=\"rotate(180 50 50)\">\r\n                    <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#456caa\">\r\n                        <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.4166666666666667s\" repeatCount=\"indefinite\"></animate>\r\n                    </rect>\r\n                </g>\r\n                <g transform=\"rotate(210 50 50)\">\r\n                    <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#456caa\">\r\n                        <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.3333333333333333s\" repeatCount=\"indefinite\"></animate>\r\n                    </rect>\r\n                </g>\r\n                <g transform=\"rotate(240 50 50)\">\r\n                    <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#456caa\">\r\n                        <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.25s\" repeatCount=\"indefinite\"></animate>\r\n                    </rect>\r\n                </g>\r\n                <g transform=\"rotate(270 50 50)\">\r\n                    <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#456caa\">\r\n                        <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.16666666666666666s\" repeatCount=\"indefinite\"></animate>\r\n                    </rect>\r\n                </g>\r\n                <g transform=\"rotate(300 50 50)\">\r\n                    <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#456caa\">\r\n                        <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"-0.08333333333333333s\" repeatCount=\"indefinite\"></animate>\r\n                    </rect>\r\n                </g>\r\n                <g transform=\"rotate(330 50 50)\">\r\n                    <rect x=\"47\" y=\"24\" rx=\"3\" ry=\"6\" width=\"6\" height=\"12\" fill=\"#456caa\">\r\n                        <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin=\"0s\" repeatCount=\"indefinite\"></animate>\r\n                    </rect>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","export default __webpack_public_path__ + \"static/media/cry.f7c602c9.gif\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport gif from './cry.gif';\r\nimport './ErrorBlock.css';\r\n\r\nconst ErrorBlock = ({ message, backUrl, handlerClickBack }) => {\r\n    return (\r\n        <div className='error-block'>\r\n            <p>{ message }</p>\r\n\r\n            <img src={ gif } alt='sticker' />\r\n\r\n            <Link className='button' to={ backUrl } onClick={ handlerClickBack }>Go to back</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorBlock;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport pokemon from 'pokemontcgsdk';\r\nimport Header from '../Header/Header';\r\nimport Loader from '../Loader/Loader';\r\nimport ErrorBlock from '../ErrorBlock/ErrorBlock';\r\nimport { POKEMON_API_KEY } from '../../const';\r\nimport './CardDetail.css';\r\n\r\nconst CardDetail = ({ handlerClickLogout }) => {\r\n    const { cardId } = useParams();\r\n    const [data, setData] = useState({});\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [serverError, setServerError] = useState(false);\r\n\r\n    pokemon.configure({ apiKey: POKEMON_API_KEY });\r\n\r\n    useEffect(() => {\r\n        pokemon.card.find(cardId)\r\n            .then(card => {\r\n                setData(card);\r\n            })\r\n            .catch(() => {\r\n                setServerError(true);\r\n            })\r\n            .finally(() => {\r\n                setIsLoaded(true);\r\n            });\r\n    }, [cardId]);\r\n\r\n    return (\r\n        <>\r\n            <Header clickLogout={ handlerClickLogout } isBackLink={ true } />\r\n                { !isLoaded\r\n                    ?\r\n                    <Loader />\r\n                    :\r\n                    <>\r\n                        { serverError\r\n                            ? <ErrorBlock\r\n                                message='Failed to load detail information.'\r\n                                backUrl='/cards'\r\n                                handlerClickBack={ () => setServerError(false) }\r\n                            />\r\n                            :\r\n                            <main>\r\n                                <div className='container'>\r\n                                    <div className='card-detail'>\r\n                                        <p className='card-detail__title'>{ data.name }</p>\r\n\r\n                                        <div className='card-detail__block'>\r\n                                            <div className='card-detail__image'>\r\n                                                <img src={ data.images?.large } alt={ data.name } />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='card-detail__block'>\r\n                                            <div className='card-detail__info'>\r\n                                                <p>Pokemon name: <b>{ data.name }</b></p>\r\n                                                <p>Supertype: <b>{ data.supertype }</b></p>\r\n                                                <p>Types: <b>{ data.types?.join(', ') }</b></p>\r\n                                                <p>Subtypes: <b>{ data.subtypes?.join(', ') }</b></p>\r\n                                            </div>\r\n\r\n                                            { data.attacks?.length && (\r\n                                                <div className='card-detail__info'>\r\n                                                    <ul>\r\n                                                        { data.attacks?.map(item => (\r\n                                                            <li key={ item.name }><b>{ item.name }</b></li>\r\n                                                        ))}\r\n                                                    </ul>\r\n                                                </div>\r\n                                            )}\r\n\r\n                                            <p className='card-detail__description'>{ data.flavorText }</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </main>\r\n                        }\r\n                    </>\r\n                }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CardDetail;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport cx from 'classnames';\r\nimport './Select.css';\r\n\r\nconst Select = ({ title = 'Type', items = [], onSelect, activeItem = '' }) => {\r\n    const [selectOpened, setSelectOpened] = useState(false);\r\n    const [selectValue, setSelectValue] = useState(activeItem);\r\n    const [filteredItems, setFilteredItems] = useState(items);\r\n    const searchInputEl = useRef();\r\n    const selectEl = useRef();\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (evt) => {\r\n            if(selectEl.current && !selectEl.current.contains(evt.target)) {\r\n                setSelectOpened(false);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('click', handleClickOutside);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFilteredItems(items);\r\n        searchInputEl.current.value = '';\r\n    }, [selectOpened]);\r\n\r\n    const handlerClickSelect = () => {\r\n        setSelectOpened(!selectOpened);\r\n    };\r\n\r\n    const handlerClickItem = (value) => {\r\n        if(selectValue === value) {\r\n            setSelectValue('');\r\n        } else {\r\n            setSelectValue(value);\r\n        }\r\n\r\n        setSelectOpened(false);\r\n        onSelect(selectValue === value ? '' : value);\r\n    };\r\n\r\n    const handlerClickSearch = (evt) => {\r\n        const value = evt.target.value.toLowerCase();\r\n        const newItems = items.filter(item => item.toLowerCase().indexOf(value) > -1);\r\n\r\n        if (value !== '') {\r\n            setFilteredItems(newItems);\r\n        } else {\r\n            setFilteredItems(items);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div ref={ selectEl } className={ cx('select my-5', { 'select--open': selectOpened }) }>\r\n            <div className='select__header' onClick={ handlerClickSelect }>\r\n                <span>{ selectValue ? selectValue : title }</span>\r\n\r\n            </div>\r\n            <div className='select__body'>\r\n                <div className='select__search'>\r\n                    <input\r\n                        ref={ searchInputEl }\r\n                        onInput={ (evt) => handlerClickSearch(evt) }\r\n                        placeholder='Type something...'\r\n                    />\r\n                </div>\r\n                <div className='select__list'>\r\n                    { filteredItems.map(item => (\r\n                        <a\r\n                            key={item}\r\n                            className={cx('select__item', {'select__item--active': item === selectValue})}\r\n                            onClick={() => handlerClickItem(item)}\r\n                        >{ item }</a>\r\n                    )) }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Select;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport cx from 'classnames';\r\nimport './CardItem.css';\r\n\r\nconst CardItem = ({ className, card, handlerClickCard }) => {\r\n    return (\r\n        <div className={ cx(className, { 'card-item': true }) } tabIndex='0' onClick={ handlerClickCard } >\r\n            <div className='card-item__image'>\r\n                <img src={ card.images?.small } alt={ card.name } />\r\n            </div>\r\n\r\n            <div className='card-item__info'>\r\n                <p>{ card.name }</p>\r\n                <p> { card.artist }</p>\r\n            </div>\r\n\r\n            <div className='card-item__controls'>\r\n                <Link\r\n                    onClick={ (evt) => evt.stopPropagation() }\r\n                    to={ `/cards/${ card.id }` }\r\n                    className='card-item__button'\r\n                >\r\n                    Go to detail page\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardItem;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport cx from 'classnames';\r\nimport './ModalCard.css';\r\n\r\nconst ModalCard = ({ card, handlerCloseModal }) => {\r\n    const { name, images } = card;\r\n    const ModalWrapper = useRef();\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setModalShow(true);\r\n\r\n        const handleClickOutside = (evt) => {\r\n            if(ModalWrapper.current && !ModalWrapper.current.contains(evt.target)) {\r\n                setModalShow(false);\r\n                handlerCloseModal();\r\n            }\r\n        };\r\n\r\n        document.addEventListener('click', handleClickOutside);\r\n    }, []);\r\n\r\n  return (\r\n      <div className='modal-card'>\r\n          <div\r\n              className={ cx('modal-card__wrapper', { 'modal-card__wrapper--show': modalShow }) }\r\n              ref={ ModalWrapper }\r\n          >\r\n              <div className='modal-card__header'>\r\n                  <p className='modal-card__title'>{ name }</p>\r\n                  <button className='modal-card__close' type='button' onClick={ handlerCloseModal }>\r\n                      <span>Close modal</span>\r\n                  </button>\r\n              </div>\r\n              <div className='modal-card__body'>\r\n                  <img src={ images?.large } alt={ name } />\r\n              </div>\r\n          </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default ModalCard;\r\n","export const getQueryForCards = (type, subtype) => {\r\n    return type && subtype\r\n        ? `types:${type} subtypes:${subtype}`\r\n        : type ? `types:${type}` :  subtype && `subtypes:${subtype}`;\r\n};\r\n\r\nexport const setSearchParams = (currentType, currentSubtype, currentPage) => {\r\n    const type = currentType && `type=${currentType}&`;\r\n    const subtype = currentSubtype && `subtype=${currentSubtype}&`;\r\n    const page = currentPage && `page=${currentPage}`;\r\n\r\n    return `?${type}${subtype}${page}`;\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport pokemon from 'pokemontcgsdk';\r\nimport cx from 'classnames';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Header from '../Header/Header';\r\nimport Loader from '../Loader/Loader';\r\nimport Select from '../Select/Select';\r\nimport CardItem from '../CardItem/CardItem';\r\nimport ModalCard from '../ModalCard/ModalCard';\r\nimport ErrorBlock from '../ErrorBlock/ErrorBlock';\r\nimport { getQueryForCards, setSearchParams } from '../../utils';\r\nimport { POKEMON_API_KEY } from '../../const';\r\nimport './Cards.css';\r\n\r\nconst Cards = ({ handlerClickLogout }) => {\r\n    const history = useHistory();\r\n    const query = new URLSearchParams(history.location.search);\r\n    const [cards, setCards] = useState([]);\r\n    const [pokemonTypes, setPokemonTypes] = useState([]);\r\n    const [pokemonSubtypes, setPokemonSubtypes] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [chosenType, setChosenType] = useState(() => query.get('type') ?? '');\r\n    const [chosenSubtype, setChosenSubtype] = useState(() => query.get('subtype') ?? '');\r\n    const [pageCount, setPageCount] = useState(0);\r\n    const [activePage, setActivePage] = useState(() => query.get('page') ? +query.get('page') : 1);\r\n    const [activeModal, setActiveModal] = useState(null);\r\n    const [serverError, setServerError] = useState(false);\r\n\r\n    pokemon.configure({ apiKey: POKEMON_API_KEY });\r\n\r\n    useEffect(() => {\r\n        const query = getQueryForCards(chosenType, chosenSubtype);\r\n\r\n        pokemon.type.all()\r\n            .then(types => {\r\n                setPokemonTypes(types);\r\n            })\r\n            .catch(() => {\r\n                setServerError(true);\r\n            });\r\n\r\n        pokemon.subtype.all()\r\n            .then(subtypes => {\r\n                setPokemonSubtypes(subtypes);\r\n            })\r\n            .catch(() => {\r\n                setServerError(true);\r\n            });\r\n\r\n        pokemon.card.where({ pageSize: 4, page: 1, q: query })\r\n            .then(response => {\r\n                setCards(response.data);\r\n                setPageCount(Math.round(response.totalCount / response.pageSize));\r\n            })\r\n            .catch(() => {\r\n                setServerError(true);\r\n            })\r\n            .finally(() => setIsLoaded(true));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const query = getQueryForCards(chosenType, chosenSubtype);\r\n        setIsLoaded(false);\r\n\r\n        pokemon.card.where({ pageSize: 4, page: 1, q: query })\r\n            .then(response => {\r\n                setCards(response.data);\r\n                setPageCount(Math.round(response.totalCount / response.pageSize));\r\n                setActivePage(1);\r\n            })\r\n            .catch(() => {\r\n                setServerError(true);\r\n            })\r\n            .finally(() => setIsLoaded(true));\r\n\r\n        history.push(`/cards${ setSearchParams(chosenType, chosenSubtype, activePage) }`);\r\n    }, [chosenType, chosenSubtype]);\r\n\r\n    useEffect(() => {\r\n        const query = getQueryForCards(chosenType, chosenSubtype);\r\n        setIsLoaded(false);\r\n\r\n        pokemon.card.where({ pageSize: 4, page: activePage, q: query })\r\n            .then(response => {\r\n                setCards(response.data);\r\n                setPageCount(Math.round(response.totalCount / response.pageSize));\r\n            })\r\n            .catch(() => {\r\n                setServerError(true);\r\n            })\r\n            .finally(() => setIsLoaded(true));\r\n\r\n        history.push(`/cards${ setSearchParams(chosenType, chosenSubtype, activePage) }`);\r\n    }, [activePage]);\r\n\r\n    const handlerPageClick = (evt, currentPage) => {\r\n        evt.preventDefault();\r\n        setActivePage(currentPage);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header clickLogout={ handlerClickLogout } />\r\n            <main className={ cx({ 'hidden': activeModal }) }>\r\n                <div className='container'>\r\n                    <>\r\n                        { serverError\r\n                            ? <ErrorBlock\r\n                                message='Failed to load cards.'\r\n                                backUrl='/cards'\r\n                                handlerClickBack={ () => setServerError(false) }\r\n                            />\r\n                            :\r\n                            <div className='cards'>\r\n                                <div className='cards__filter'>\r\n                                    <Select\r\n                                        title='Type'\r\n                                        items={ pokemonTypes }\r\n                                        onSelect={ (value) => setChosenType(value) }\r\n                                        activeItem={ chosenType }\r\n                                    />\r\n\r\n                                    <Select\r\n                                        title='Subtype'\r\n                                        items={ pokemonSubtypes }\r\n                                        onSelect={ (value) => setChosenSubtype(value) }\r\n                                        activeItem={ chosenSubtype }\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='cards__wrapper'>\r\n                                    { !isLoaded\r\n                                        ?  <Loader />\r\n                                        :\r\n                                        <>\r\n                                            <div className='cards__list'>\r\n                                                { cards.map(card => (\r\n                                                    <CardItem\r\n                                                        className='cards__item'\r\n                                                        key={ card.id }\r\n                                                        card={ card }\r\n                                                        handlerClickCard={ () => setActiveModal(card) }\r\n                                                    />\r\n                                                ))}\r\n\r\n                                                { !cards.length && <p>Pokemons not found by this filter</p> }\r\n                                            </div>\r\n\r\n                                            { pageCount > 1 && (\r\n                                                <Pagination\r\n                                                    page={ activePage }\r\n                                                    onChange={ handlerPageClick }\r\n                                                    count={ pageCount }\r\n                                                    showFirstButton showLastButton\r\n                                                />\r\n                                            ) }\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </>\r\n                </div>\r\n\r\n                { activeModal && (\r\n                    <ModalCard card={ activeModal } handlerCloseModal={ () => setActiveModal(null) } />\r\n                ) }\r\n            </main>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Cards;\r\n","export default __webpack_public_path__ + \"static/media/pokeball.e45a6ab4.png\";","import React from 'react';\r\nimport img from './pokeball.png';\r\nimport './NotFoundPage.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst NotFoundPage = () => {\r\n    return (\r\n        <div className='empty-page'>\r\n            <div className='empty-page__status'>\r\n                4\r\n                <img src={ img } alt='pokeball 0' />\r\n                4\r\n            </div>\r\n\r\n\r\n            <p className='empty-page__text'>Page Not Found!</p>\r\n\r\n            <Link className='empty-page__back button' to='/'>Go to back</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import React, { useState } from 'react';\r\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Authorization from '../Authorization/Authorization';\r\nimport CardDetail from '../CardDetail/CardDetail';\r\nimport Cards from '../Cards/Cards';\r\nimport NotFoundPage from '../NotFoundPage/NotFoundPage';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    const isAuthorizedLocal = localStorage.getItem('pokemonAuthorization');\r\n    const [isAuthorized, setIsAuthorized] = useState(isAuthorizedLocal);\r\n    const [serverError, setServerError] = useState(null);\r\n\r\n    const checkCode = async () => {\r\n        let code = null;\r\n\r\n        const OTR = new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                resolve({ data: '123456' });\r\n                // reject('Server error');\r\n            }, 250);\r\n        });\r\n\r\n        await OTR.then(response => {\r\n            code = response.data;\r\n            setServerError(null);\r\n        })\r\n            .catch(err => {\r\n                console.error(err);\r\n                setServerError(err);\r\n            });\r\n\r\n        return code;\r\n    };\r\n\r\n    const handlerLoginFormSubmit = ({ login, password }) => login.toLowerCase() === 'kode@kode.ru' && password === 'Enk0deng';\r\n\r\n    const handlerCodeFormSubmit = async (login, code) => {\r\n        const getCode = await checkCode(code);\r\n\r\n        if (getCode === code) {\r\n            localStorage.setItem('pokemonAuthorization', login);\r\n            setIsAuthorized(login);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    return (\r\n        <div className='app'>\r\n            <Router>\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path='/'\r\n                        render={() => {\r\n                            return !isAuthorized ? <Redirect to='/login' /> : <Redirect to='/cards' />;\r\n                        }}\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path='/login'\r\n                        render={() => {\r\n                            return !isAuthorized\r\n                                ? <Authorization\r\n                                    handlerLoginFormSubmit={ handlerLoginFormSubmit }\r\n                                    handlerCodeFormSubmit={ handlerCodeFormSubmit }\r\n                                    serverError={ serverError }\r\n                                />\r\n                                : <Redirect to='/cards' />;\r\n                        }}\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path='/cards'\r\n                        render={() => {\r\n                            return !isAuthorized\r\n                                ? <Redirect to='/login' />\r\n                                : <Cards handlerClickLogout={ () => setIsAuthorized(null) } />;\r\n                        }}\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path='/cards/:cardId'\r\n                        render={() => {\r\n                            return !isAuthorized\r\n                                ? <Redirect to='/login' />\r\n                                : <CardDetail handlerClickLogout={ () => setIsAuthorized(null) } />;\r\n                        }}\r\n                    />\r\n                    <Route>\r\n                        <NotFoundPage />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}